코드를 살펴본 결과, 드론이 각 웨이포인트에서 10초 정지한 후 벽면 접근 및 벽면에서 10초 대기하는 단계는 구현되어 있지만, 벽면 대기 후 다음 웨이포인트로 전환하는 로직이 구현되어 있지 않은 것이 주요 문제로 보입니다.
주요 문제점

    웨이포인트 인덱스 증가 없음

        current_waypoint_index_는 웨이포인트를 로드할 때 한 번만 초기화되고, 이후 다음 웨이포인트로 넘어가기 위한 인덱스 증가 코드가 없습니다.

        moveToNextWaypoint() 함수가 정의되어 있지만, 내부에서는 인덱스 증가가 이루어지지 않고 있으며, 실제로도 호출되지 않습니다.

    상태 전환 로직 미흡

        웨이포인트에 도착하면 is_waiting_at_waypoint_가 true가 되고 10초 대기 후 벽 접근(is_moving_to_wall_) 상태로 전환됩니다.

        벽 접근이 완료되면 is_waiting_at_wall_가 true로 설정되지만, 벽면에서 10초 대기 후 다음 웨이포인트로 전환하는 조건(즉, 대기 시간이 10초 이상인 경우)을 체크하는 분기가 없습니다.

개선 방향

    벽 대기 상태 종료 후 다음 웨이포인트로 전환

        timer_callback()나 별도의 상태 체크 로직에서, is_waiting_at_wall_ 상태일 때 10초 대기 시간이 경과했는지 확인한 후,

            is_waiting_at_wall_를 false로 전환하고,

            current_waypoint_index_를 증가시켜 다음 웨이포인트로 넘어가도록 하는 코드를 추가해야 합니다.

    상태 머신 도입 고려

        현재 여러 상태(일반 웨이포인트 이동, 웨이포인트 대기, 벽 접근, 벽 대기)가 혼재되어 있으므로, 각 상태를 명확히 분리하는 상태 머신 방식을 도입하면 코드 가독성과 유지보수가 용이해질 것입니다.

예시로, timer_callback() 내에 아래와 같은 분기를 추가해볼 수 있습니다:

// 벽 대기 상태인 경우, 10초 이상 대기했으면 다음 웨이포인트로 전환
if (is_waiting_at_wall_) {
    double current_time = this->get_clock()->now().seconds();
    double waiting_time = current_time - waypoint_reached_time_;
    if (waiting_time >= waypoint_wait_time_) {
        RCLCPP_INFO(this->get_logger(), "벽 대기 10초 완료. 다음 웨이포인트로 전환합니다.");
        is_waiting_at_wall_ = false;
        current_waypoint_index_++;  // 다음 웨이포인트로 이동
        // 필요한 경우, PID 상태나 기타 변수도 초기화
    }
}

이와 같이 벽 대기 상태에서 대기 시간이 끝나면 인덱스를 증가시키고 다음 웨이포인트의 좌표를 목표로 설정하도록 수정하면, 원하시는 동작 순서(웨이포인트 도착 → 10초 대기 → 벽 접근 → 10초 대기 → 다음 웨이포인트 이동)가 구현될 것입니다.

혹시 추가적인 문제가 있거나, 다른 부분에 대해 더 구체적인 설명이 필요하면 말씀해 주세요.
